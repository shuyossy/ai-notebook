// 旧: current = current.replace(/(?:[\p{Zs}\t]|\p{Cf})+$/gu, '');
current = current.replace(/(?:\p{White_Space}|\p{Cf})+$/gu, '');

// 旧: const SPACE_RUN = /[\p{Zs}\t]{2,}/gu;
const SPACE_RUN = /[\p{Zs}\t\f\v]{2,}/gu; // ← FF/VTも対象に


// 旧: const indentMatch = current.match(/^[ \t\u00A0\u3000]*/u);
const indentMatch = current.match(/^[\p{Zs}\t\f\v]*/u);

if (policy.removeCommaOnlyLines) {
  // 旧: const commaOnly = /^[\p{Zs}\p{Cf}]*(?:,[\p{Zs}\p{Cf}]*)+$/u;
  const commaOnly = /^[\p{White_Space}\p{Cf}]*(?:,[\p{White_Space}\p{Cf}]*)+$/u;
  if (commaOnly.test(current)) current = '';
}

// 旧: if (/^[\p{Zs}\p{Cf}]+$/u.test(current)) { current = ''; }
if (/^[\p{White_Space}\p{Cf}]+$/u.test(current)) { current = ''; }

// ① CRLF 正規化の前
raw = raw.replace(/\f/g, '\n'); // FF→改行
raw = raw.replace(/\r\n?/g, '\n');

// 行頭の White_Space/Cf をすべて除去（強め）
current = current.replace(/^[\p{White_Space}\p{Cf}]+/u, '');
