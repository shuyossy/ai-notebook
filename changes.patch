diff --git a/src/mastra/agents/prompts.ts b/src/mastra/agents/prompts.ts
index 8c0ae3dd6..2bba1c4f7 100644
--- a/src/mastra/agents/prompts.ts
+++ b/src/mastra/agents/prompts.ts
@@ -501,235 +501,6 @@ ${additionalInstructions}
 Please ensure clarity, conciseness, and a professional tone.`;
 }
 
-// レビュー時ドキュメント要約生成用のシステムプロンプト
-export const REVIEW_DOCUMENT_SUMMARIZATION_SYSTEM_PROMPT = `
-You are an expert document analyst. Your job is to carefully analyze the given document and identify all the key topics without missing anything important.
-
-Your task is to analyze the provided document and:
-1. Identify between 5 and 15 distinct topics that cover the full range of the text.
-2. For each topic, write a  title and a concise summary.
-3. Ensure the topics are comprehensive, non-overlapping, and together capture the entire meaning of the text.
-
-Guidelines:
-- Topics should be specific, independent, and cover different aspects of the document
-- Each topic should be substantial enough to warrant separate attention during review
-- The summary should be concise but comprehensive, covering all important points
-- Write topics and summary in the same language as the document (default to Japanese if unclear)
-`;
-
-// レビュー準備確認用のシステムプロンプト（初回実行用）
-export const getReviewReadinessFirstRunPrompt = ({
-  runtimeContext,
-}: {
-  runtimeContext: RuntimeContext<ReviewCheckReviewReadinessFirstRunAgentRuntimeContext>;
-}) => {
-  const checklistItems = runtimeContext.get('checklistItems') as {
-    id: number;
-    content: string;
-  }[];
-  const additionalInstructions = runtimeContext.get(
-    'additionalInstructions',
-  ) as string | undefined;
-
-  return `
-You are a review planning expert. Your task is to generate comprehensive questions that need to be answered to conduct a thorough review of documents based on the provided checklist items.
-
-## Context
-You will review documents based on the following checklist items:
-${checklistItems.map((item) => `- [${item.id}] ${item.content}`).join('\n')}
-
-${additionalInstructions ? `Additional review instructions: ${additionalInstructions}` : ''}
-
-## Your Task
-Based on the document summaries and topics provided, generate specific questions that need to be answered to ensure each checklist item can be properly evaluated. The questions should:
-
-1. Be specific and focused on information needed for checklist evaluation
-2. Cover all aspects necessary to assess each checklist item
-3. Be answerable based on the document content
-4. Help gather detailed information that might not be apparent from just the summaries
-
-Generate questions for each document that will help collect the necessary information for a comprehensive review.
-`;
-};
-
-// レビュー準備確認用のシステムプロンプト（2回目以降実行用）
-export const getReviewCheckReadinessSubsequentPrompt = ({
-  runtimeContext,
-}: {
-  runtimeContext: RuntimeContext<ReviewCheckReviewReadinessSubsequentAgentRuntimeContext>;
-}) => {
-  const checklistItems = runtimeContext.get('checklistItems') as {
-    id: number;
-    content: string;
-  }[];
-  const additionalInstructions = runtimeContext.get(
-    'additionalInstructions',
-  ) as string | undefined;
-  const priorQnA = runtimeContext.get('priorQnA') as Array<{
-    documentId: string;
-    documentName: string;
-    qna: Array<{ question: string; answer: string }>;
-  }>;
-
-  return `
-You are a review readiness assessor. Your task is to determine whether sufficient information has been gathered to conduct a thorough review based on the provided checklist items.
-
-## Context
-You will review documents based on the following checklist items:
-${checklistItems.map((item) => `- [${item.id}] ${item.content}`).join('\n')}
-
-${additionalInstructions ? `Additional review instructions: ${additionalInstructions}` : ''}
-
-## Previous Q&A Information
-${priorQnA
-  .map(
-    (doc) => `
-### Document: ${doc.documentName} (ID: ${doc.documentId})
-${doc.qna.map((qa) => `Q: ${qa.question}\nA: ${qa.answer}`).join('\n\n')}
-`,
-  )
-  .join('\n')}
-
-## Your Task
-1. Assess whether the provided document summaries, topics, and Q&A information are sufficient to properly evaluate each checklist item
-2. If sufficient information is available, set "ready" to true
-3. If more information is needed, set "ready" to false and generate specific additional questions that will help complete the review
-
-The questions should:
-- Fill gaps in information needed for checklist evaluation
-- Be specific and targeted to missing information
-- Be answerable based on the document content
-- Avoid redundancy with already answered questions
-`;
-};
-
-// 質問回答生成用のシステムプロンプト
-export const getReviewAnswerQuestionPrompt = ({
-  runtimeContext,
-}: {
-  runtimeContext: RuntimeContext<ReviewAnswerQuestionAgentRuntimeContext>;
-}) => {
-  const checklistItems = runtimeContext.get('checklistItems') as {
-    id: number;
-    content: string;
-  }[];
-
-  return `
-You are a document analysis expert. Your task is to carefully read the provided document and answer specific questions accurately and comprehensively.
-
-## Context
-The questions are designed to gather information needed for reviewing the document against these checklist items:
-${checklistItems.map((item) => `- [${item.id}] ${item.content}`).join('\n')}
-
-## Your Task
-Read the document carefully and provide detailed, accurate answers to each question. Your answers should:
-
-1. Be factually accurate and based solely on the document content
-2. Be comprehensive and include all relevant details
-3. Cite specific parts of the document as evidence:
-   a) Quote relevant sections with clear section/chapter references
-   b) Separate discussions by section if some parts address the question differently
-   c) Cover every relevant occurrence—do not offer only a general summary
-4. Specify document sections that are relevant to each answer:
-   a) Identify specific file names, chapter titles, or section headers
-   b) Reference page numbers or section numbers when available
-5. Indicate if information is not available in the document
-6. Be written in the same language as the document (default to Japanese if unclear)
-
-Provide complete, section-specific answers that will enable a thorough review of the document against the checklist items.
-`;
-};
-
-// 大量ドキュメントレビュー実行用のプロンプト（要約・Q&A情報に特化）
-export function getLargeDocumentReviewExecutionPrompt({
-  runtimeContext,
-}: {
-  runtimeContext: RuntimeContext<ReviewExecuteAgentRuntimeContext>;
-}): string {
-  const checklists = runtimeContext.get('checklistItems');
-  const additionalInstructions = runtimeContext.get('additionalInstructions');
-  const commentFormat = runtimeContext.get('commentFormat');
-  const evaluationSettings = runtimeContext.get('evaluationSettings');
-
-  // Build a human-readable list of checklist items
-  const formattedList = checklists
-    .map((item) => `ID: ${item.id} - ${item.content}`)
-    .join('\n');
-
-  // デフォルトのフォーマット
-  const defaultFormat = `【評価理由・根拠】
-   Provide the reasoning and evidence here (cite specific sections or examples in the document).
-
-   【改善提案】
-   Provide actionable suggestions here (how to better satisfy the criterion).`;
-
-  const actualFormat =
-    commentFormat && commentFormat.trim() !== ''
-      ? commentFormat
-      : defaultFormat;
-
-  // 評定項目の設定を構築
-  let evaluationInstructions = '';
-  if (
-    evaluationSettings &&
-    evaluationSettings.items &&
-    evaluationSettings.items.length > 0
-  ) {
-    // カスタム評定項目を使用
-    const evaluationList = evaluationSettings.items
-      .map((item) => `   - ${item.label}: ${item.description}`)
-      .join('\n');
-    evaluationInstructions = `1. For each checklist item, assign one of these ratings:\n${evaluationList}`;
-  } else {
-    // デフォルト評定項目を使用
-    evaluationInstructions = `1. For each checklist item, assign one of these ratings:
-   - A: 基準を完全に満たしている
-   - B: 基準を一部満たしている
-   - C: 基準を満たしていない
-   - –: 評価の対象外、または評価できない`;
-  }
-
-  return `You are a professional document reviewer specializing in large document analysis. Your job is to evaluate documents against a set of checklist items based on provided topic summaries and Q&A information.
-
-Important Context:
-- You are reviewing LARGE DOCUMENTS that have been pre-processed into topic summaries and Q&A responses
-- Your evaluation is based on SUMMARIZED INFORMATION, not the full original document
-- The topics and Q&A responses represent key aspects of the original document(s)
-- Multiple documents may have been combined and analyzed together
-
-Checklist items:
-${formattedList}
-
-Instructions:
-${evaluationInstructions}
-2. For each item, write a comment in Japanese following this format:
-
-${actualFormat}
-
-3. For each checklist item, specify the review sections that should be examined for evaluation and commenting:
-   a) Identify the specific file names that need to be reviewed.
-   b) For each file, list the relevant sections within that file.
-4. In your comments, be sure to:
-   a) Cite specific parts of the document as evidence (use section names, chapter titles, page references from the Q&A information).
-   b) Separate discussions by section if some parts meet the item and others do not.
-   c) Cover every relevant occurrence—do not offer only a general summary.
-   d) Write comments as if you directly reviewed the original document (do not mention "topic summaries", "Q&A responses", or internal processing).
-5. Do not omit any checklist item; review the entire document against each criterion before finalizing your evaluation.
-6. Important: Write natural comments that reference document sections directly:
-   - Use phrases like "文書のX章では..." or "Y部分に記載されている..."
-   - Avoid mentioning internal processing like "要約によると" or "Q&Aで確認したところ"
-   - Make comments appear as if you read the original document directly
-${
-  additionalInstructions && additionalInstructions.trim() !== ''
-    ? `
-Special Instructions:
-${additionalInstructions}
-`
-    : ``
-}
-Please ensure clarity, conciseness, and a professional tone. Write comments that appear natural and comprehensive, as if you directly reviewed the complete original document.`;
-}
-
 // 個別ドキュメントレビュー用のプロンプト
 export function getIndividualDocumentReviewPrompt({
   runtimeContext,
diff --git a/src/mastra/agents/workflowAgents.ts b/src/mastra/agents/workflowAgents.ts
index cd7b62bfd..ad0371265 100644
--- a/src/mastra/agents/workflowAgents.ts
+++ b/src/mastra/agents/workflowAgents.ts
@@ -12,11 +12,6 @@ import {
   // getChecklistIntegrationPrompt,
   getChecklistCategolizePrompt,
   getDocumentReviewExecutionPrompt,
-  getLargeDocumentReviewExecutionPrompt,
-  REVIEW_DOCUMENT_SUMMARIZATION_SYSTEM_PROMPT,
-  getReviewReadinessFirstRunPrompt,
-  getReviewCheckReadinessSubsequentPrompt,
-  getReviewAnswerQuestionPrompt,
   getIndividualDocumentReviewPrompt,
   getConsolidateReviewPrompt,
 } from './prompts';
@@ -113,13 +108,6 @@ export const reviewExecuteAgent = new Agent({
   model: getOpenAICompatibleModel,
 });
 
-// 大量ドキュメントレビュー専用エージェント（要約・Q&A情報に特化）
-export const largeDocumentReviewExecuteAgent = new Agent({
-  name: 'largeDocumentReviewExecuteAgent',
-  instructions: getLargeDocumentReviewExecutionPrompt,
-  model: getOpenAICompatibleModel,
-});
-
 export const topicExtractionAgent = new Agent({
   name: 'topicExtractionAgent',
   instructions: getTopicExtractionPrompt,
@@ -138,30 +126,6 @@ export const topicChecklistAgent = new Agent({
 //   model: getOpenAICompatibleModel,
 // });
 
-export const reviewDocumentSummarizationAgent = new Agent({
-  name: 'reviewDocumentSummarizationAgent',
-  instructions: REVIEW_DOCUMENT_SUMMARIZATION_SYSTEM_PROMPT,
-  model: getOpenAICompatibleModel,
-});
-
-export const reviewCheckReviewReadinessFirstRunAgent = new Agent({
-  name: 'reviewCheckReviewReadinessFirstRunAgent',
-  instructions: getReviewReadinessFirstRunPrompt,
-  model: getOpenAICompatibleModel,
-});
-
-export const reviewCheckReviewReadinessSubsequentRunAgent = new Agent({
-  name: 'reviewCheckReviewReadinessSubsequentRunAgent',
-  instructions: getReviewCheckReadinessSubsequentPrompt,
-  model: getOpenAICompatibleModel,
-});
-
-export const reviewAnswerQuestionAgent = new Agent({
-  name: 'reviewAnswerQuestionAgent',
-  instructions: getReviewAnswerQuestionPrompt,
-  model: getOpenAICompatibleModel,
-});
-
 // 個別ドキュメントレビュー用エージェント（効率化版）
 export const individualDocumentReviewAgent = new Agent({
   name: 'individualDocumentReviewAgent',
diff --git a/src/mastra/index.ts b/src/mastra/index.ts
index c73c1798d..d2cd1e327 100644
--- a/src/mastra/index.ts
+++ b/src/mastra/index.ts
@@ -15,13 +15,8 @@ import {
   generalDocumentChecklistAgent,
   classifyCategoryAgent,
   reviewExecuteAgent,
-  largeDocumentReviewExecuteAgent,
   topicExtractionAgent,
   topicChecklistAgent,
-  reviewDocumentSummarizationAgent,
-  reviewCheckReviewReadinessFirstRunAgent,
-  reviewCheckReviewReadinessSubsequentRunAgent,
-  reviewAnswerQuestionAgent,
   individualDocumentReviewAgent,
   consolidateReviewAgent,
 } from './agents/workflowAgents';
@@ -74,13 +69,8 @@ export const mastra: Mastra = new Mastra({
     generalDocumentChecklistAgent,
     classifyCategoryAgent,
     reviewExecuteAgent,
-    largeDocumentReviewExecuteAgent,
     topicExtractionAgent,
     topicChecklistAgent,
-    reviewDocumentSummarizationAgent,
-    reviewCheckReviewReadinessFirstRunAgent,
-    reviewCheckReviewReadinessSubsequentRunAgent,
-    reviewAnswerQuestionAgent,
     individualDocumentReviewAgent,
     consolidateReviewAgent,
   },
