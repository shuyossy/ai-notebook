diff --git a/src/__tests__/integration/Sidebar.test.tsx b/src/__tests__/integration/Sidebar.test.tsx
index a23e7b6c3..b80e2f450 100644
--- a/src/__tests__/integration/Sidebar.test.tsx
+++ b/src/__tests__/integration/Sidebar.test.tsx
@@ -263,7 +263,7 @@ describe('Sidebar Component', () => {
     await user.click(screen.getByTestId('document-list-button'));
 
     // SourceListModalが表示されることを確認
-    expect(screen.getByText('ソース一覧')).toBeInTheDocument();
+    expect(screen.getByText('登録ドキュメント一覧')).toBeInTheDocument();
   });
 
   // テスト9: フッターの設定モーダル表示
diff --git a/src/__tests__/integration/SourceListModal.test.tsx b/src/__tests__/integration/SourceListModal.test.tsx
index 5a8b7d8c1..905675b87 100644
--- a/src/__tests__/integration/SourceListModal.test.tsx
+++ b/src/__tests__/integration/SourceListModal.test.tsx
@@ -190,7 +190,7 @@ describe('SourceListModal Component', () => {
     });
 
     // リロードボタンが無効化されていることを確認
-    const reloadButton = screen.getByText('処理中...');
+    const reloadButton = screen.getByText('同期処理中...');
     expect(reloadButton).toBeDisabled();
 
     // チェックボックスが無効化されていることを確認
@@ -824,13 +824,67 @@ describe('SourceListModal Component', () => {
     });
 
     // 完了状態なのでリロードボタンが活性化されていることを確認
-    const reloadButton = screen.getByText('ソース読み込み');
+    const reloadButton = screen.getByText('ファイル同期');
     expect(reloadButton).toBeEnabled();
 
     // リロードボタンをクリック
     fireEvent.click(reloadButton);
 
     // onReloadSourcesが呼ばれたことを確認
-    expect(props.onReloadSources).toHaveBeenCalled();
+    await waitFor(() => {
+      expect(props.onReloadSources).toHaveBeenCalled();
+    });
+  });
+
+  // テスト11: 登録ディレクトリが空文字の場合のファイル同期挙動確認
+  test('登録ディレクトリが空文字の場合のファイル同期挙動確認', async () => {
+    // 登録ディレクトリが空文字のモックデータをセットアップ(window.electron.store.get('source'))
+    window.electron.store.get = jest.fn().mockReturnValue({
+      registerDir: '',
+    });
+
+    const props = {
+      ...defaultProps,
+    };
+
+    // コンポーネントをレンダリング
+    render(
+      <SourceListModal
+        open={props.open}
+        processing={props.processing}
+        onClose={props.onClose}
+        onReloadSources={props.onReloadSources}
+        onStatusUpdate={props.onStatusUpdate}
+        showSnackbar={props.showSnackbar}
+      />,
+    );
+
+    // 進める
+    act(() => {
+      jest.advanceTimersByTime(5000);
+    });
+
+    // ソースデータが取得されるまで待機
+    await waitFor(() => {
+      expect(window.electron.source.getSources).toHaveBeenCalled();
+    });
+
+    // ファイル同期ボタンが有効化されていることを確認
+    const reloadButton = screen.getByText('ファイル同期');
+    expect(reloadButton).toBeEnabled();
+
+    // ファイル同期ボタンをクリック
+    fireEvent.click(reloadButton);
+    // 登録ディレクトリが設定されていない場合のエラーメッセージが表示されることを確認
+    await waitFor(() => {
+      expect(props.showSnackbar).toHaveBeenCalledWith(
+        'ドキュメント登録ディレクトリが設定されていません',
+        'error',
+      );
+    });
+    // onReloadSourcesが呼ばれないことを確認
+    await waitFor(() => {
+      expect(props.onReloadSources).not.toHaveBeenCalled();
+    });
   });
 });
diff --git a/src/__tests__/integration/chat.test.tsx b/src/__tests__/integration/chat.test.tsx
index c54f3c7d6..56ce37919 100644
--- a/src/__tests__/integration/chat.test.tsx
+++ b/src/__tests__/integration/chat.test.tsx
@@ -887,7 +887,7 @@ describe('ChatArea Component', () => {
 
     window.electron.chat.getMessages = jest.fn().mockResolvedValue(mockMultiImageMessages);
 
-    render(<ChatArea selectedRoomId="1" />);
+    render(<ChatArea selectedRoomId="18" />);
 
     // 全ての画像が表示されることを確認
     await waitFor(() => {
@@ -919,7 +919,7 @@ describe('ChatArea Component', () => {
 
     window.electron.chat.getMessages = jest.fn().mockResolvedValue(mockImageMessage);
     const user = userEvent.setup();
-    render(<ChatArea selectedRoomId="1" />);
+    render(<ChatArea selectedRoomId="19" />);
 
     // メッセージエリアを取得
     const messageText = await screen.findByText('画像付きメッセージ');
diff --git a/src/main/types/settingsSchema.ts b/src/main/types/settingsSchema.ts
index 4397a2253..70d3b0a7d 100644
--- a/src/main/types/settingsSchema.ts
+++ b/src/main/types/settingsSchema.ts
@@ -32,8 +32,10 @@ export const DatabaseSchema = z.object({
 export const SourceSchema = z.object({
   registerDir: z
     .string()
-    .min(1, { message: 'ソース登録ディレクトリは必須です' })
-    .refine(async (path) => await checkPathExists(path), {
+    .refine(async (path) => {
+      if (path.trim() === '') return true; // 空文字は許容
+      return await checkPathExists(path)
+    }, {
       message: '指定されたパスが存在しません',
     }),
 });
diff --git a/src/mastra/workflows/sourceRegistrationManager.ts b/src/mastra/workflows/sourceRegistrationManager.ts
index db8ce245d..0aeb2b1e4 100644
--- a/src/mastra/workflows/sourceRegistrationManager.ts
+++ b/src/mastra/workflows/sourceRegistrationManager.ts
@@ -81,6 +81,9 @@ export default class SourceRegistrationManager {
     try {
       const store = getStore();
       const { registerDir } = store.get('source');
+      if (!registerDir || registerDir.trim() === '') {
+        throw new Error('ドキュメント登録ディレクトリが設定されていません');
+      }
       // ディレクトリ内のファイル一覧を取得
       let files = await this.readDirectoryRecursively(registerDir);
 
diff --git a/src/renderer/components/common/SnackbarNotification.tsx b/src/renderer/components/common/SnackbarNotification.tsx
index 7817038d1..e3fe74530 100644
--- a/src/renderer/components/common/SnackbarNotification.tsx
+++ b/src/renderer/components/common/SnackbarNotification.tsx
@@ -23,7 +23,11 @@ const SnackbarNotification: React.FC<SnackbarNotificationProps> = ({
       onClose={onClose}
       anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}
     >
-      <Alert onClose={onClose} severity={severity} sx={{ width: '100%' }}>
+      <Alert
+        onClose={onClose}
+        severity={severity}
+        sx={{ whiteSpace: 'pre-line', width: '100%' }}
+      >
         {message}
       </Alert>
     </Snackbar>
diff --git a/src/renderer/components/common/SourceListModal.tsx b/src/renderer/components/common/SourceListModal.tsx
index 4b6dad504..61fcfeb53 100644
--- a/src/renderer/components/common/SourceListModal.tsx
+++ b/src/renderer/components/common/SourceListModal.tsx
@@ -1,6 +1,7 @@
 import React, { useEffect, useState } from 'react';
 import {
   AlertColor,
+  Alert,
   Modal,
   Box,
   Typography,
@@ -25,6 +26,7 @@ import {
 } from '@mui/icons-material';
 
 import { Source } from '../../../db/schema';
+import { sourceService } from '../../services/sourceService';
 
 interface SourceListModalProps {
   open: boolean;
@@ -193,7 +195,16 @@ function SourceListModal({
     };
   }, [open, checkedSources, onStatusUpdate]);
 
-  const handleReloadClick = () => {
+  const handleReloadClick = async () => {
+    // ドキュメント登録ディレクトリが設定されていない場合はエラースナックバー表示
+    const { success, dir, error } = await sourceService.getRegisterDir();
+    if (!success || !dir?.trim()) {
+      showSnackbar(
+        error || 'ドキュメント登録ディレクトリが設定されていません',
+        'error',
+      );
+      return;
+    }
     onReloadSources();
   };
 
@@ -276,8 +287,15 @@ function SourceListModal({
         }}
       >
         <Typography variant="h6" component="h2" gutterBottom>
-          ソース一覧
+          登録ドキュメント一覧
         </Typography>
+        <Alert severity="info" sx={{ whiteSpace: 'pre-line', mb: 2 }}>
+          設定されたディレクトリ(歯車アイコンから変更可能)内のドキュメントを一覧表示しています
+          <br />
+          チェックされたドキュメントは、AIの回答時に適宜参照されます
+          <br />
+          ※ディレクトリの内容が更新された場合は、ファイル同期を実行してください
+        </Alert>
 
         <Box sx={{ mb: 2, display: 'flex', justifyContent: 'flex-end' }}>
           <Tooltip title="ソース登録ディレクトリ内のファイル内容と同期します">
@@ -287,7 +305,7 @@ function SourceListModal({
               disabled={processing || updatingSources.size > 0}
               startIcon={<SyncIcon />}
             >
-              {processing ? '処理中...' : 'ソース読み込み'}
+              {processing ? '同期処理中...' : 'ファイル同期'}
             </Button>
           </Tooltip>
         </Box>
@@ -328,7 +346,7 @@ function SourceListModal({
                 </TableCell>
                 <TableCell>ファイルパス</TableCell>
                 <TableCell>タイトル（生成）</TableCell>
-                <TableCell>ステータス</TableCell>
+                <TableCell>同期処理ステータス</TableCell>
                 <TableCell>最終更新</TableCell>
               </TableRow>
             </TableHead>
diff --git a/src/renderer/services/sourceService.ts b/src/renderer/services/sourceService.ts
index 4d49a8421..71dc83864 100644
--- a/src/renderer/services/sourceService.ts
+++ b/src/renderer/services/sourceService.ts
@@ -17,6 +17,33 @@ export const sourceService = {
       };
     }
   },
+  /**
+   * ソースの登録ディレクトリを取得する
+   * @returns 登録ディレクトリのパス
+   */
+  getRegisterDir: async (): Promise<{
+    success: boolean;
+    dir?: string;
+    error?: string;
+  }> => {
+    try {
+      // IPC通信を使用してメインプロセスから登録ディレクトリを取得する
+      const source = (await window.electron.store.get('source')) as any;
+      if (!source || !source.registerDir) {
+        return {
+          success: false,
+          error: 'ドキュメント登録ディレクトリが設定されていません',
+        };
+      }
+      return { success: true, dir: source.registerDir || '' };
+      // eslint-disable-next-line
+    } catch (error) {
+      return {
+        success: false,
+        error: `ドキュメント登録ディレクトリの取得に失敗しました`,
+      };
+    }
+  },
 };
 
 export default sourceService;
