diff --git a/CLAUDE.md b/CLAUDE.md
index a747f0b42..2fb4c6e25 100644
--- a/CLAUDE.md
+++ b/CLAUDE.md
@@ -58,9 +58,9 @@ npm test
           - 与えられたドキュメントを全てレビュー用AIのコンテキストに与える
         - 大量ドキュメントレビュー機能
           - 以下のようなworkflowでレビューを実行
-            - まず、個々のドキュメントに対してトピックとそのトピックの要約を生成する
-            - チェックリストをレビューするために、個々のドキュメントに対する質問とその応答をそれぞれ十分だと判断されるまで生成させる
-            - 最終的にトピック・要約、質問・応答を全てレビュー用AIの入力コンテキストに与えてレビューさせる
+            - 個々のドキュメントに対して、レビュー対象チェックリストを基にレビューを実施させる
+              - ドキュメントがAIの入力コンテキストに収まらなかった場合は適宜ドキュメントを分割する
+            - 最終的に全てのドキュメントのレビュー結果を合わせて、それを統合してドキュメント全体としてのレビュー結果を出力させる
       - どちらも複数ファイルを選択することができ、その場合は、複数ファイルが一つのドキュメントとして認識される(よくある、本紙・別紙などのドキュメントに対応)
     - ユーザは対象ドキュメントをファイルアップロード形式で指定する
        - 基本的にはアップロードされたファイルはテキスト抽出処理が実行され、後続のworkflow処理で利用される
@@ -203,29 +203,18 @@ ElectronのIPCを使用してフロントエンド・バックエンド間の通
 
 
 ## 依頼タスク
-- 大量ドキュメントレビュー機能におけるworkflow処理の変更
-  - 目的
-    - 処理の効率化（ASISのままだと処理が全然終わらない）
-  - ASIS
-    - まず、個々のドキュメントに対してトピックとそのトピックの要約を生成する
-    - チェックリストをレビューするために、個々のドキュメントに対する質問とその応答をそれぞれ十分だと判断されるまで生成させる
-    - 最終的にトピック・要約、質問・応答を全てレビュー用AIの入力コンテキストに与えてレビューさせる
-  - TOBE
-    - 個々のドキュメントに対して、レビュー対象チェックリストを基にレビューを実施させる
-      - ドキュメントがAIの入力コンテキストに収まらなかった場合は適宜ドキュメントを分割する
-    - 最終的に全てのドキュメントのレビュー結果を合わせて、それを統合してドキュメント全体としてのレビュー結果を出力させる
-
-### （依頼タスクの）残タスク
-- workflowは実装済み(`src/mastra/workflows/sourceReview/executeReview/largeDocumentReview`)
-- workflow内で利用するエージェントの実装は未済
-  - ただし、runtimeContextは定義済み
+- 大量ドキュメントレビュー機能におけるAIのシステムプロンプト改善
+  - 対象：レビュー統合用AI
+    - 改善ポイント
+      - ASIS
+        - 最終的に、統合したドキュメントとしてレビューさせたいのに、ある個別のドキュメントがチェックリストを満たしてないから、最終的な評価が悪くなってしまったりする
+      - TOBE
+        - チェックリストの内容をよく理解して、個々のドキュメントが全てそのチェックリストを満たしてなければいけないのか、統合ドキュメントとして一部のドキュメントでチェックリストを満たしていれば良いのかを判断してからレビューすること(個別のドキュメントではなく、統合して一つのドキュメントとして最終的なレビュー結果が欲しいのです)
+
 
 ### タスク実装時の注意点
 - 実装済みworkflowをよく理解した上で、目的(最高のドキュメントレビュー)を達成するための最適なプロンプトを作成すること
   - workflow全体としてより良い結果が出るようなプロンプトを意識すること
-- 個々のドキュメントに対してレビューする際のAIエージェント(特にそのシステムプロンプト)については以下を意識すること
-  - 大量ドキュメントレビュー機能により、ドキュメントの一部が与えられていることを理解させること
-  - 後にドキュメント全体のレビューを実行させる際に参考となるように、最終的なチェックリストレビューに役立つ情報は全てコメントに反映させること。
-  - additionalInstructionなどruntimeContextから取得できる変数も考慮しながらレビューさせること
-  - その他、レビュー時の重要な観点や指示については既存のシステムプロンプト(getReviewAnswerQuestionPrompt,getLargeDocumentReviewExecutionPrompt)を参考にすること
+- 最終的なドキュメントレビュー結果に、このAIシステムの内部ロジックなどが露呈しないようにすること
+  - あくまで自然なレビュー結果を生成して欲しいということ
 - 複雑な処理なので、十分に思考して実装すること
diff --git a/src/mastra/agents/prompts.ts b/src/mastra/agents/prompts.ts
index 2bba1c4f7..bb62fd9b1 100644
--- a/src/mastra/agents/prompts.ts
+++ b/src/mastra/agents/prompts.ts
@@ -466,7 +466,7 @@ ${evaluationList}`;
     // デフォルト評定項目を使用
     evaluationInstructions = `1. For each checklist item, assign one of these ratings:
    - A: 基準を完全に満たしている
-   - B: 基準を一部満たしている
+   - B: 基準をある程度満たしている
    - C: 基準を満たしていない
    - –: 評価の対象外、または評価できない`;
   }
@@ -620,7 +620,7 @@ export function getConsolidateReviewPrompt({
     // デフォルト評定項目を使用
     evaluationInstructions = `1. For each checklist item, assign one of these ratings:
    - A: 基準を完全に満たしている
-   - B: 基準を一部満たしている
+   - B: 基準をある程度満たしている
    - C: 基準を満たしていない
    - –: 評価の対象外、または評価できない`;
   }
@@ -636,6 +636,24 @@ CONSOLIDATION CONTEXT:
 Checklist items for final evaluation:
 ${formattedList}
 
+CRITICAL: CHECKLIST ITEM INTERPRETATION
+Before assigning ratings, you must carefully analyze the nature and scope of each checklist item to determine its application context:
+
+**Two types of checklist requirements:**
+1. **Individual Document Requirements**: Must be satisfied by EACH document separately
+   - Examples: "Each section must have a summary", "Every chapter must include references", "All pages must have page numbers"
+   - Evaluation approach: Check if ALL documents satisfy the requirement individually
+
+2. **Document Set Requirements**: Must be satisfied by the UNIFIED document set as a whole
+   - Examples: "Cover page must include company logo" (only cover page needs this), "Overall document provides complete technical specifications" (assessed across all documents together), "Terminology must be consistent throughout" (consistency across the entire set)
+   - Evaluation approach: Check if the requirement is satisfied when considering all documents as ONE integrated document
+
+**Critical thinking process:**
+- Read each checklist item carefully and determine which type it is
+- Consider the semantic meaning and intent behind the requirement
+- Ask yourself: "Does EVERY individual document need to satisfy this, or does the COMPLETE DOCUMENT SET need to satisfy this?"
+- When in doubt, consider the practical review scenario: Would a reviewer check this in each document separately, or across the entire set?
+
 CONSOLIDATION INSTRUCTIONS:
 ${evaluationInstructions}
 2. For each item, write a consolidated comment in Japanese following this format:
@@ -643,11 +661,14 @@ ${evaluationInstructions}
 ${actualFormat}
 
 3. Consolidation methodology:
-   a) Analyze all individual review results for each checklist item
-   b) Synthesize findings across all document parts into a unified assessment
-   c) Resolve any apparent contradictions by considering the full context
-   d) Ensure the final rating reflects the overall document set performance
-   e) Combine evidence from all parts to create comprehensive justification
+   a) **First**, determine whether each checklist item is an "Individual Document Requirement" or "Document Set Requirement"
+   b) Analyze all individual review results for each checklist item
+   c) Synthesize findings according to the requirement type:
+      - For Individual Document Requirements: Assess if ALL documents satisfy it
+      - For Document Set Requirements: Assess if the UNIFIED set satisfies it as a whole
+   d) Resolve any apparent contradictions by considering the full context and requirement type
+   e) Ensure the final rating reflects the appropriate evaluation scope (individual vs. unified)
+   f) Combine evidence from all parts to create comprehensive justification
 
 4. In your consolidated comments, ensure to:
    a) Reference specific sections across ALL reviewed documents/parts using ORIGINAL FILE NAMES
@@ -656,17 +677,28 @@ ${actualFormat}
    d) Give actionable improvement suggestions based on the complete analysis
    e) Write as if you reviewed the complete original document set directly
    f) Always use the original file names when mentioning documents in your consolidated comments
+   g) **Do NOT mention** "individual document review", "consolidation", or any internal process terms
 
 5. Rating assignment logic:
+   - **Most Important**: Base your rating on the checklist item's requirement type (individual vs. unified)
+   - For Individual Document Requirements:
+     * If some documents fail while others pass, the overall rating should reflect this mixed state
+     * Consider whether the failures are critical or minor
+   - For Document Set Requirements:
+     * Focus on whether the COMPLETE SET satisfies the requirement
+     * Do NOT penalize the set just because one individual document lacks something that another document provides
+     * Example: If a checklist asks for "complete technical specifications" and Document A covers hardware while Document B covers software, the SET satisfies the requirement even though each individual document is incomplete
    - Consider the cumulative evidence from all document parts
-   - If different parts show varying compliance levels, weigh them appropriately
-   - Prioritize the overall ability to meet the checklist criterion across the entire document set
-   - Document any significant variations between different document sections
+   - If different parts show varying compliance levels, weigh them according to the requirement type
+   - Prioritize the overall ability to meet the checklist criterion in the appropriate scope
+   - Document any significant variations between different document sections when relevant
 
 6. Final comment quality standards:
    - Must appear as a natural, comprehensive review of the complete document set
    - Should not reveal the internal consolidation process
    - Should demonstrate thorough understanding of the entire document scope
+   - Must read as if a single reviewer examined the entire document set directly
+   - Use natural language without internal terminology (avoid "consolidated", "synthesized", "individual document reviews", etc.)
 ${
   additionalInstructions && additionalInstructions.trim() !== ''
     ? `
diff --git a/src/mastra/workflows/sourceReview/executeReview/largeDocumentReview/individualDocumentReviewStep.ts b/src/mastra/workflows/sourceReview/executeReview/largeDocumentReview/individualDocumentReviewStep.ts
index 95afb1b86..9ded7b902 100644
--- a/src/mastra/workflows/sourceReview/executeReview/largeDocumentReview/individualDocumentReviewStep.ts
+++ b/src/mastra/workflows/sourceReview/executeReview/largeDocumentReview/individualDocumentReviewStep.ts
@@ -15,7 +15,6 @@ import { getMainLogger } from '@/main/lib/logger';
 import { createCombinedMessageFromExtractedDocument } from '../../lib';
 import { getChecklistsErrorMessage } from '../lib';
 
-
 const logger = getMainLogger();
 
 // 個別ドキュメントレビューステップの入力スキーマ
@@ -115,16 +114,9 @@ Checklist Items to Review:\n${checklists.map((item) => `- ID: ${item.id} - ${ite
           z.object({
             // CoTのようにAIにどのファイルのどのセクションをレビューするべきかを考えさせるための隠しフィールド
             reviewSections: z
-              .array(
-                z.object({
-                  fileName: z.string().describe('file name to review'),
-                  sectionNames: z.array(
-                    z.string().describe('section name within the file'),
-                  ),
-                }),
-              )
+              .array(z.string().describe('section name within the file'))
               .describe(
-                'files and sections that should be reviewed for evaluation and commenting',
+                'sections that should be reviewed for evaluation and commenting',
               ),
             checklistId: z.number().describe('checklist id'),
             comment: z.string().describe('evaluation comment'),
diff --git a/src/renderer/components/review/ReviewArea.tsx b/src/renderer/components/review/ReviewArea.tsx
index fb13e0c70..6233fca4d 100644
--- a/src/renderer/components/review/ReviewArea.tsx
+++ b/src/renderer/components/review/ReviewArea.tsx
@@ -28,7 +28,7 @@ const defaultCommentFormat =
 const defaultEvaluationSettings: CustomEvaluationSettings = {
   items: [
     { label: 'A', description: '基準を完全に満たしている' },
-    { label: 'B', description: '基準を一部満たしている' },
+    { label: 'B', description: '基準をある程度満たしている' },
     { label: 'C', description: '基準を満たしていない' },
     { label: '–', description: '評価の対象外、または評価できない' },
   ],
